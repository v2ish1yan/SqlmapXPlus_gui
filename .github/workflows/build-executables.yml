name:  Build  and  Release  Executables

on:
    push:
      branches:
        -  main    #  或者你想要监控的分支名

jobs:
    build-and-release:
      runs-on:  ubuntu-latest
      steps:
      -  uses:  actions/checkout@v2

      -  name:  Set  up  Python  3.8.8
         uses:  actions/setup-python@v2
         with:
          python-version:  3.8.8

      -  name:  Install  PyInstaller
         run:  |
          python  -m  pip  install  pyinstaller

      -  name:  Build  Windows  Executable
         run:  |
          pyinstaller  --onefile  --platform  windows.x86_64   main.py
         env:
          PYTHONIOENCODING:  utf-8

      -  name:  Build  macOS  Executable
         run:  |
          pyinstaller  --onefile  --platform  darwin.x86_64   main.py
         env:
          PYTHONIOENCODING:  utf-8

      -  name:  Build  Linux  Executable
         run:  |
          pyinstaller  --onefile  --platform  linux.x86_64   main.py
         env:
          PYTHONIOENCODING:  utf-8

      -  name:  Create  Release
         id:  create_release
         uses:  actions/create-release@v1
         env:
          GITHUB_TOKEN:  ${{  secrets.GITHUB_TOKEN  }}
         with:
          tag_name:  'v${{  github.ref  }}'
          release_name:  'Release  v${{  github.ref  }}'
          draft:  false
          prerelease:  false

      -  name:  Upload  Windows  Executable
         uses:  actions/upload-release-asset@v1
         env:
          GITHUB_TOKEN:  ${{  secrets.GITHUB_TOKEN  }}
         with:
          upload_url:  ${{  steps.create_release.outputs.upload_url  }}
          asset_path:  ./dist/your_script.exe
          asset_name: main_windows.exe
          asset_content_type:  application/octet-stream

      -  name:  Upload  macOS  Executable
         uses:  actions/upload-release-asset@v1
         env:
          GITHUB_TOKEN:  ${{  secrets.GITHUB_TOKEN  }}
         with:
          upload_url:  ${{  steps.create_release.outputs.upload_url  }}
          asset_path:  ./dist/your_script.exe
          asset_name: main_macos
          asset_content_type:  application/octet-stream

      -  name:  Upload  Linux  Executable
         uses:  actions/upload-release-asset@v1
         env:
          GITHUB_TOKEN:  ${{  secrets.GITHUB_TOKEN  }}
         with:
          upload_url:  ${{  steps.create_release.outputs.upload_url  }}
          asset_path:  ./dist/your_script
          asset_name: main_linux
          asset_content_type:  application/octet-stream
